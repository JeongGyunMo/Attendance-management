
/* Drop Tables */

DROP TABLE IF EXISTS Commons;
DROP TABLE IF EXISTS EmpBusinOrders;
DROP TABLE IF EXISTS EmpYearFreeTime;
DROP TABLE IF EXISTS Times;
DROP TABLE IF EXISTS Employee;
DROP TABLE IF EXISTS HolidayManage;




/* Create Tables */

CREATE TABLE Commons
(
	Code numeric(4),
	CodeName  varchar(255),
	Registred varchar(255),
	RegistredTime timestamp,
	Updated varchar(255),
	UpdatedTime timestamp
) WITHOUT OIDS;


CREATE TABLE EmpBusinOrders
(
	EmployeeId int NOT NULL,
	DepartCode numeric(4),
	EmployeeName varchar(255),
	FromDate timestamp,
	ToDate timestamp,
	BusinessDesCode numeric(4),
	Registred varchar(255),
	RegistredTime timestamp,
	Updated varchar(255),
	UpdatedTime timestamp
) WITHOUT OIDS;


CREATE TABLE Employee
(
	EmployeeId serial NOT NULL,
	DepartCode char(4),
	EmployName varchar(30),
	LoginId char,
	LoginPass char(4),
	Phonetic varchar(30),
	ZipCode varchar(10),
	Address1 varchar(255),
	Address2 varchar(255),
	PhoneNum varchar(25),
	MobileNum varchar(25),
	Email varchar(30),
	Registred varchar(255),
	RegistredTime timestamp,
	Updated varchar(255),
	UpdatedTime timestamp,
	PRIMARY KEY (EmployeeId)
) WITHOUT OIDS;


CREATE TABLE EmpYearFreeTime
(
	SeriesNum serial NOT NULL,
	EmployeeId int NOT NULL,
	EmployeeName varchar(255),
	YearTimeCode numeric(4),
	FromDate timestamp,
	ToDate timestamp,
	Grounds varchar(255),
	Days numeric(5),
	ApprovalCode numeric(4),
	Registred varchar(255),
	RegistredTime timestamp,
	Updated varchar(255),
	UpdatedTime timestamp,
	PRIMARY KEY (SeriesNum)
) WITHOUT OIDS;


CREATE TABLE HolidayManage
(
	Date timestamp,
	Holiday varchar(255),
	Remarks varchar(255),
	Registred varchar(255),
	RegistredTime timestamp,
	Updated varchar(255),
	UpdatedTime timestamp
) WITHOUT OIDS;


CREATE TABLE Times
(
	TimeId serial NOT NULL,
	EmployeeId int NOT NULL,
	Dates timestamp,
	AttendTime timestamp,
	LeaveTime timestamp,
	BusinDescCode char(4),
	OverTimeClass numeric(1),
	OverTimeStartTime timestamp,
	OvertimeEndTime timestamp,
	Registred varchar(255),
	RegistredTime timestamp,
	Updated varchar(255),
	UpdatedTime timestamp,
	PRIMARY KEY (TimeId)
) WITHOUT OIDS;



/* Create Foreign Keys */

ALTER TABLE EmpBusinOrders
	ADD FOREIGN KEY (EmployeeId)
	REFERENCES Employee (EmployeeId)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE EmpYearFreeTime
	ADD FOREIGN KEY (EmployeeId)
	REFERENCES Employee (EmployeeId)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE Times
	ADD FOREIGN KEY (EmployeeId)
	REFERENCES Employee (EmployeeId)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



